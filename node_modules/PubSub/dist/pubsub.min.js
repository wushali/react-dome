/**
 * PubSub
 * Javascript implementation of the Publish/Subscribe pattern.
 *
 * @version 3.2.7
 * @author George Raptis <georapbox@gmail.com> (georapbox.github.io)
 * @homepage https://github.com/georapbox/PubSub#readme
 * @repository https://github.com/georapbox/PubSub.git
 * @license MIT
 */

!function(t,n,r){"use strict";"function"==typeof define&&define.amd?define(r):"undefined"!=typeof module&&module.exports?module.exports=r():n.PubSub=r()}(0,this,function(){"use strict";function t(){var n,r,e;for(n=1,r=arguments.length;n<r;n++)for(e in arguments[n])Object.prototype.hasOwnProperty.call(arguments[n],e)&&(arguments[n][e]&&arguments[n][e].constructor&&arguments[n][e].constructor===Object?(arguments[0][e]=arguments[0][e]||{},t(arguments[0][e],arguments[n][e])):arguments[0][e]=arguments[n][e]);return arguments[0]}function n(t,n,r){var e;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&n&&!1===n.call(r,t[e],e,t))return;return t}function r(t){return function(){return this[t].apply(this,arguments)}}function e(t,n,r){for(var e,o,u=t._pubsub_topics[n],i=0,s=u?u.length:0;i<s;i+=1)o=u[i].token,(e=u[i]).callback(r,{name:n,token:o}),!0===e.once&&t.unsubscribe(o)}function o(t,n,r,o){return!!t._pubsub_topics[n]&&(o?e(t,n,r):setTimeout(function(){e(t,n,r)},0),!0)}function u(){return this instanceof u?(this._pubsub_topics={},this._pubsub_uid=-1,this):new u}return u.prototype.subscribe=function(t,n,r){var e=this._pubsub_topics,o=this._pubsub_uid+=1,u={};if("function"!=typeof n)throw new TypeError("When subscribing for an event, a callback function must be defined.");return e[t]||(e[t]=[]),u.token=o,u.callback=n,u.once=!!r,e[t].push(u),o},u.prototype.subscribeOnce=function(t,n){return this.subscribe(t,n,!0)},u.prototype.publish=function(t,n){var r=Array.prototype.slice.call(arguments,1);return o(this,t,r.length<=1?n:r,!1)},u.prototype.publishSync=function(t,n){var r=Array.prototype.slice.call(arguments,1);return o(this,t,r.length<=1?n:r,!0)},u.prototype.unsubscribe=function(t){var n,r,e=this._pubsub_topics,o=!1;for(n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&e[n]){for(r=e[n].length;r;){if(r-=1,e[n][r].token===t)return e[n].splice(r,1),t;n===t&&(e[n].splice(r,1),o=!0)}if(!0===o)return t}return!1},u.prototype.unsubscribeAll=function(){return n(this._pubsub_topics,function(t,n,r){r[n]=[]}),this},u.prototype.hasSubscribers=function(t){var r=this._pubsub_topics,e=!1;return null==t?(n(r,function(t){if(t.length>0)return e=!0,!1}),e):!!(Object.prototype.hasOwnProperty.call(r,t)&&r[t].length>0)},u.prototype.subscribers=function(){return t({},this._pubsub_topics)},u.prototype.subscribersByTopic=function(t){return this._pubsub_topics[t]?this._pubsub_topics[t].slice(0):[]},u.prototype.alias=function(t){return n(t,function(n,e){u.prototype[e]&&(u.prototype[t[e]]=r(e))}),this},u});
//# sourceMappingURL=pubsub.min.js.map